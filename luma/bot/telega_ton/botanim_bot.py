import os
from typing import Final

from dotenv import load_dotenv
# from dotenv import dotenv_values
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CommandHandler, CallbackQueryHandler, ApplicationBuilder, CallbackContext

# settings: dict = dotenv_values(".env")
# bot_token = settings.get("TOKEN")

load_dotenv()
bot_token = os.getenv("TOKEN")
BOT_USERNAME: Final = '@gromamicon_bot'
print(bot_token)


async def start(update, context):
    await show_description(update, context)
    await show_menu(update, context)


async def show_description(update, context):
    image_url = ('https://pohcdn.com/guide/sites/default/files/styles/paragraph__hero_banner__hb_image__1280bp/public'
                 '/hero_banner/Niagara-falls.jpg')
    caption = 'Hi! Do you like this picture?'

    ikb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton('‚ù§Ô∏è', callback_data='like'), InlineKeyboardButton('üëé', callback_data='dislike')],
    ])

    await context.bot.send_photo(chat_id=update.effective_chat.id, photo=image_url, caption=caption, reply_markup=ikb)


async def show_menu(update, context):
    keyboard = [
        [InlineKeyboardButton("Information about place", callback_data='place_info')],
        [InlineKeyboardButton("Visit this place", callback_data='visit')],
        [InlineKeyboardButton("more information", callback_data='contact_info')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await context.bot.send_message(chat_id=update.effective_chat.id, text='Select part menu', reply_markup=reply_markup)


async def button_click(update, context):
    query = update.callback_query
    button = query.data
    await query.answer()

    if button == 'like':
        info_text = "You like this photo"
        await context.bot.send_message(chat_id=query.message.chat_id, text=info_text)

    elif button == 'dislike':
        info_text = "You dont like this photo"
        await context.bot.send_message(chat_id=query.message.chat_id, text=info_text)

    elif button == 'place_info':
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ about place
        info_text = '''–ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ –ù–∏–∞–≥–∞—Ä—Å–∫–∏–π –≤–æ–¥–æ–ø–∞–¥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ –≤ 130 –∫–º –æ—Ç –≥–æ—Ä–æ–¥–∞ –¢–æ—Ä–æ–Ω—Ç–æ, 
        –æ–Ω —Å—á–∏—Ç–∞–µ—Ç—Å—è –µ–≥–æ –≥–ª–∞–≤–Ω–æ–π –ø—Ä–∏—Ä–æ–¥–Ω–æ–π –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é. –ù–∏–∞–≥–∞—Ä–∞ —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ 
        –∂–∏–≤–æ–ø–∏—Å–Ω—ã—Ö –≤–æ–¥–æ–ø–∞–¥–æ–≤ –≤ –º–∏—Ä–µ. –°–≤–æ–µ –Ω–∞—á–∞–ª–æ –æ–Ω –±–µ—Ä–µ—Ç –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –°–®–ê, –Ω–æ —Å–∞–º—ã–µ –∑–∞–≤–æ—Ä–∞–∂–∏–≤–∞—é—â–∏–µ –≤–∏–¥—ã –¥–æ—Å—Ç–∞–ª–∏—Å—å 
        –ö–∞–Ω–∞–¥–µ.'''

        await context.bot.send_message(chat_id=query.message.chat_id, text=info_text)

    elif button == 'visit':
        # send a map for visit this  place
        map_screen = 'C:/Users/konst/Downloads/Screenshot_map_niagara.png'
        # with open(map_screen, 'rb') as file:
        await context.bot.send_photo(chat_id=query.message.chat_id, photo=open(map_screen, "rb"))

    elif button == 'contact_info':
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        info_text = """
    –°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ –ö–ª–∏–µ–Ω—Ç–æ–≤
    –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–º–æ—â—å —Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏, –ø–ª–∞—Ç–µ–∂–∞–º–∏ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –±–µ–∑—É–ø—Ä–µ—á–Ω–æ–≥–æ –æ–ø—ã—Ç–∞.
    Email: support@scantrip.com
    
    –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å
    Scantrip Inc.
    1000 N. West Street Suite 1200, PMB # 5017
    Wilmington, Delaware,
    19801 USA
        """
        await context.bot.send_message(chat_id=query.message.chat_id, text=info_text)


async def help_command(update: Update, context: CallbackContext):
    help_message = """
    The following commands are available:

    /start -> Hi! Do you like this picture?
    /help -> Command list
    /caps -> Upper message
    """
    await context.bot.send_message(chat_id=update.effective_chat.id, text=help_message)


def main():
    application = ApplicationBuilder().token(bot_token).build()
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CommandHandler('desc', show_description))
    application.add_handler(CommandHandler('menu', show_menu))
    application.add_handler(CommandHandler('help', help_command))
    application.add_handler(CallbackQueryHandler(button_click))

    application.run_polling()


# –í—ã–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
if __name__ == '__main__':
    main()
